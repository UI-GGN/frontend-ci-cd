name: Continuous Integration and Continuous Deployment

on:
  push:
    branches: [main]

permissions:
 id-token: write
 contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Environment
        uses: ./.github/actions/setup
      - name: Run tests
        run: yarn test --coverage
      - name: Upload test coverage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Test coverage
          path: |
            ./coverage

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Environment
        uses: ./.github/actions/setup
      - name: Run audit
        run: yarn audit

  artifacts:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Environment
        uses: ./.github/actions/setup
      - name: Build packages
        run: |
          yarn build
      - name: Upload production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Static Build folder
          path: |
            ./build
      - name: Download production artifacts
        uses: actions/download-artifact@v3
        with:
          name: Static Build folder
      - name: Display structure of downloaded files
        run: ls -R

  provision_infrastructure:
    name: Provisioning infrastructure
    runs-on: ubuntu-latest
    needs: artifacts
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Environment
      uses: ./.github/actions/setup
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@master
      with:
        role-to-assume: ${{secrets.IAM_ROLE}}
        aws-region: us-east-1
        role-session-name: samplerolesession
    - name: getting list of all the buckets
      run: |
        aws --region us-east-1 s3 ls
    - name: Deploy CloudFormation stack
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: ci-cd-demo-stack
        template: ./cloudformation/template.yml
        no-fail-on-empty-changeset: "1"
        capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM,CAPABILITY_NAMED_IAM
        parameter-overrides: "BucketName=frontend-ci-cd-web-app-s3-bucket-v4"
        
  deploy_to_cloud:
    needs: provision_infrastructure
    name: Deploy to cloud
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Environment
      uses: ./.github/actions/setup
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@master
      with:
        role-to-assume: ${{secrets.IAM_ROLE}}
        aws-region: us-east-1
        role-session-name: samplerolesession
    - name: Build packages
      run: |
        yarn build
    - name: Upload to S3
      run: |
        aws s3 sync ./build s3://frontend-ci-cd-web-app-s3-bucket-v4 --delete
    - name: Get CloudFront distribution ID
      id: get_cf_id
      run: |
        CF_ID=$(aws cloudformation describe-stacks --stack-name ci-cd-demo-stack --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDistributionId'].OutputValue" --output text)
        echo "::set-output name=cf_id::$CF_ID"

    - name: Invalidate CloudFront cache
      if: steps.get_cf_id.outputs.cf_id != ''
      run: |
        CF_ID="${{ steps.get_cf_id.outputs.cf_id }}"
        aws cloudfront create-invalidation --distribution-id "$CF_ID" --paths "/*"    
